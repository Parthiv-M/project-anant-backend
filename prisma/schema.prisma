generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model mxene {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  mxene           String  @unique
  topology        topology?
  M1              String
  M2              String
  T1              String
  T2              String
  X               String
  latticeConstant String
  magneticMoment  String
  bandGap         String
  isMetallic      Boolean
  bands_dat       String  @unique
  poscar_file     String  @unique
  bands_png       String  @unique
}

model topology {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  mxene           mxene?   @relation(fields: [mxeneId], references: [id])
  mxeneId         String?  @map("mxene") @db.ObjectId
  M1              String
  M2              String
  T1              String
  T2              String
  X               String
  mag_state       String
  latticeConstant String
  socBandGap      String
  magneticMoment  String
  soc_calculated  Boolean
  top_props       String[]
  soc_band        String  @unique
  surf_img        String  @unique
  berry_img       String  @unique
}

model twoDMaterial {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  compound        String
  F1              String
  F2              String
  M               String
  latticeParam    String
  formationEnergy String
  eHull           String
  phononFreq      String
  poscar_data     String
}

model mxeneProposals {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  mxene           String @unique
  M1              String
  M2              String
  T1              String
  T2              String
  X               String
  latticeConstant String
  bandwith        String
  formula         String
}

model faqs {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  question String
  answer   String
}

model updates {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  date    String
  message String
}

model publications {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  journal  String
  volume   Int
  pages    String
  title    String
  author   String
  month    String
  year     Int
  url      String
  favorite Boolean
}

model users {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  email                 String @unique
  fullName              String
  organisation          String
  designation           String
  mxeneDownloadCount    Int
  topoDownloadCount     Int
  twoDDownloadCount     Int
  thermoDownloadCount   Int
  reason                String[]
}
