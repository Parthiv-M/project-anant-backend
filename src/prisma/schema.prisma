generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database/db.sqlite3"
}

model X1X2M_x1x2m {
  id    Int    @id @default(autoincrement())
  name  String
  X1    String
  X2    String
  M     String
  Eform Float
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "sqlite_autoindex_auth_group_1")
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  content_type_id            Int
  codename                   String
  name                       String
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_group_permissions     auth_group_permissions[]
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String
  last_login                 DateTime?
  is_superuser               Unsupported("bool")
  username                   String                       @unique(map: "sqlite_autoindex_auth_user_1")
  first_name                 String
  email                      String
  is_staff                   Unsupported("bool")
  is_active                  Unsupported("bool")
  date_joined                DateTime
  last_name                  String
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

model django_admin_log {
  id                  Int                              @id @default(autoincrement())
  object_id           String?
  object_repr         String
  action_flag         Unsupported("smallint unsigned")
  change_message      String
  content_type_id     Int?
  user_id             Int
  action_time         DateTime
  django_content_type django_content_type?             @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user           auth_user                        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String
  model            String
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String
  name    String
  applied DateTime
}

model django_session {
  session_key  String   @id
  session_data String
  expire_date  DateTime

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model frontpage_anantapp {
  id        Int    @id @default(autoincrement())
  name      String
  app_url   String
  app_image String
}

model hardness_superalloy_image {
  id        Int    @id @default(autoincrement())
  imagefile String
}

model mxn_search_mxene {
  id          Int    @id @default(autoincrement())
  name        String
  M1          String
  M2          String
  X           String
  T1          String
  T2          String
  Lc          Float?
  Bg          Float?
  Mm          Float?
  poscar_file String
  bands_image String
}
